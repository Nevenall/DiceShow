//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.4-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Dice.g4 by ANTLR 4.5.4-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace DiceShow.Ops.Parsing.Internal {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="DiceParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.4-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IDiceVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>Hit</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHit([NotNull] DiceParser.HitContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Count</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCount([NotNull] DiceParser.CountContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Drop</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDrop([NotNull] DiceParser.DropContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Explode</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplode([NotNull] DiceParser.ExplodeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>AddScalar</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddScalar([NotNull] DiceParser.AddScalarContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Reroll</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReroll([NotNull] DiceParser.RerollContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>AddDiceExp</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddDiceExp([NotNull] DiceParser.AddDiceExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>SubScalar</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubScalar([NotNull] DiceParser.SubScalarContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Keep</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeep([NotNull] DiceParser.KeepContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>SubDiceExp</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubDiceExp([NotNull] DiceParser.SubDiceExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Lowest</c>
	/// labeled alternative in <see cref="DiceParser.target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLowest([NotNull] DiceParser.LowestContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>TargetInt</c>
	/// labeled alternative in <see cref="DiceParser.target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTargetInt([NotNull] DiceParser.TargetIntContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>Highest</c>
	/// labeled alternative in <see cref="DiceParser.target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHighest([NotNull] DiceParser.HighestContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DiceParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] DiceParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DiceParser.dice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDice([NotNull] DiceParser.DiceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DiceParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] DiceParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DiceParser.diceExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDiceExp([NotNull] DiceParser.DiceExpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DiceParser.target"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTarget([NotNull] DiceParser.TargetContext context);
}
} // namespace DiceShow.Ops.Parsing.Internal
