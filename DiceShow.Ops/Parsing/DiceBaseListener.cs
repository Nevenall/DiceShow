//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.4-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Dice.g4 by ANTLR 4.5.4-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace DiceShow.Ops.Parsing.Internal {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IDiceListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.4-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class DiceBaseListener : IDiceListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>Hit</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHit([NotNull] DiceParser.HitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Hit</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHit([NotNull] DiceParser.HitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>Count</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCount([NotNull] DiceParser.CountContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Count</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCount([NotNull] DiceParser.CountContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>Drop</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop([NotNull] DiceParser.DropContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Drop</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop([NotNull] DiceParser.DropContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>Explode</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplode([NotNull] DiceParser.ExplodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Explode</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplode([NotNull] DiceParser.ExplodeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>AddScalar</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddScalar([NotNull] DiceParser.AddScalarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddScalar</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddScalar([NotNull] DiceParser.AddScalarContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>Reroll</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReroll([NotNull] DiceParser.RerollContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Reroll</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReroll([NotNull] DiceParser.RerollContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>AddDiceExp</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddDiceExp([NotNull] DiceParser.AddDiceExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddDiceExp</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddDiceExp([NotNull] DiceParser.AddDiceExpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>SubScalar</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubScalar([NotNull] DiceParser.SubScalarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SubScalar</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubScalar([NotNull] DiceParser.SubScalarContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>Keep</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeep([NotNull] DiceParser.KeepContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Keep</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeep([NotNull] DiceParser.KeepContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>SubDiceExp</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubDiceExp([NotNull] DiceParser.SubDiceExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SubDiceExp</c>
	/// labeled alternative in <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubDiceExp([NotNull] DiceParser.SubDiceExpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiceParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] DiceParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiceParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] DiceParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiceParser.dice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDice([NotNull] DiceParser.DiceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiceParser.dice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDice([NotNull] DiceParser.DiceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] DiceParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiceParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] DiceParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiceParser.diceExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDiceExp([NotNull] DiceParser.DiceExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiceParser.diceExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDiceExp([NotNull] DiceParser.DiceExpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiceParser.target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTarget([NotNull] DiceParser.TargetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiceParser.target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTarget([NotNull] DiceParser.TargetContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace DiceShow.Ops.Parsing.Internal
